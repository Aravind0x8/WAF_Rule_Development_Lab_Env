-- WAF Lab Database Setup Script
-- Creates the test database and vulnerable table structure

-- Create database
CREATE DATABASE IF NOT EXISTS waf_test_db;
USE waf_test_db;

-- Create users table
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100),
    full_name VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_login TIMESTAMP NULL,
    login_attempts INT DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Create user_sessions table for tracking
CREATE TABLE IF NOT EXISTS user_sessions (
    session_id VARCHAR(128) PRIMARY KEY,
    user_id INT,
    ip_address VARCHAR(45),
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Create audit_log table for security events
CREATE TABLE IF NOT EXISTS audit_log (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    event_type VARCHAR(50) NOT NULL,
    user_id INT NULL,
    ip_address VARCHAR(45),
    user_agent TEXT,
    description TEXT,
    event_data JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Insert test users
INSERT INTO users (username, password, email, full_name, is_active) VALUES
('admin', 'admin123', 'admin@example.com', 'System Administrator', TRUE),
('john_doe', 'password123', 'john.doe@example.com', 'John Doe', TRUE),
('test_user', 'testpass', 'test@example.com', 'Test User', TRUE),
('jane_smith', 'smith123', 'jane.smith@example.com', 'Jane Smith', TRUE),
('demo', 'demopass', 'demo@example.com', 'Demo Account', TRUE);

-- Insert sample audit events
INSERT INTO audit_log (event_type, user_id, ip_address, description) VALUES
('USER_LOGIN', 1, '192.168.1.100', 'Successful administrator login'),
('USER_CREATED', 1, '192.168.1.100', 'New user account created'),
('PASSWORD_CHANGE', 2, '192.168.1.101', 'User changed password');

-- Create indexes for performance
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_sessions_user_id ON user_sessions(user_id);
CREATE INDEX idx_audit_user_id ON audit_log(user_id);
CREATE INDEX idx_audit_created_at ON audit_log(created_at);

-- Create database user for the application
CREATE USER IF NOT EXISTS 'waf_app_user'@'localhost' IDENTIFIED BY 'app_password_123';
GRANT SELECT, INSERT, UPDATE ON waf_test_db.* TO 'waf_app_user'@'localhost';
FLUSH PRIVILEGES;

-- Display setup information
SELECT 'Database setup completed successfully!' as status;
SELECT COUNT(*) as user_count FROM users;
SELECT COUNT(*) as audit_entries FROM audit_log;